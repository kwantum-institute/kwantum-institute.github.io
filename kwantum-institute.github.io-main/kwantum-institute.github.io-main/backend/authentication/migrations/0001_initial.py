# Generated by Django 5.0.7 on 2025-08-02 11:26

import django.contrib.auth.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="LoginAttempt",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        help_text="Username used in the login attempt",
                        max_length=150,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                    ),
                ),
                (
                    "ip_address",
                    models.GenericIPAddressField(
                        help_text="IP address of the login attempt"
                    ),
                ),
                (
                    "user_agent",
                    models.TextField(
                        blank=True, help_text="User agent string from the request"
                    ),
                ),
                (
                    "success",
                    models.BooleanField(
                        default=False,
                        help_text="Whether the login attempt was successful",
                    ),
                ),
                (
                    "timestamp",
                    models.DateTimeField(
                        auto_now_add=True, help_text="When the login attempt occurred"
                    ),
                ),
            ],
            options={
                "verbose_name": "Login Attempt",
                "verbose_name_plural": "Login Attempts",
                "ordering": ["-timestamp"],
                "indexes": [
                    models.Index(
                        fields=["username", "timestamp"],
                        name="authenticat_usernam_69bd25_idx",
                    ),
                    models.Index(
                        fields=["ip_address", "timestamp"],
                        name="authenticat_ip_addr_95756c_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "bio",
                    models.TextField(
                        blank=True,
                        help_text="User's biography or description",
                        max_length=500,
                    ),
                ),
                (
                    "avatar",
                    models.ImageField(
                        blank=True,
                        help_text="User's profile picture",
                        null=True,
                        upload_to="avatars/",
                    ),
                ),
                (
                    "date_of_birth",
                    models.DateField(
                        blank=True, help_text="User's date of birth", null=True
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(
                        blank=True, help_text="User's phone number", max_length=20
                    ),
                ),
                (
                    "is_verified",
                    models.BooleanField(
                        default=False,
                        help_text="Whether the user's email has been verified",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, help_text="When the profile was created"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, help_text="When the profile was last updated"
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "User Profile",
                "verbose_name_plural": "User Profiles",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="PasswordResetToken",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "token",
                    models.CharField(
                        help_text="Unique token for password reset",
                        max_length=100,
                        unique=True,
                    ),
                ),
                (
                    "is_used",
                    models.BooleanField(
                        default=False, help_text="Whether the token has been used"
                    ),
                ),
                (
                    "expires_at",
                    models.DateTimeField(help_text="When the token expires"),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, help_text="When the token was created"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        help_text="User requesting password reset",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="password_reset_tokens",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Password Reset Token",
                "verbose_name_plural": "Password Reset Tokens",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(fields=["token"], name="authenticat_token_3288c7_idx"),
                    models.Index(
                        fields=["user", "is_used"],
                        name="authenticat_user_id_9751b1_idx",
                    ),
                ],
            },
        ),
    ]
